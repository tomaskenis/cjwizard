
## Design

The Wizard is a nested UI-focused structure.  The outer-most layer is
the `WizardContainer` a class that extends `JPanel`, and can therefore
be inserted into any other Swing widget (such as a `JDialog` or
`JFrame`).  `WizardContainer` contains the four buttons ("< Prev"
"Next >" "Finish" and "Cancel") and a `PageTemplate`.

`PageTemplate` is another `JPanel` class that can be customized to add
wrapper widgets around the actual wizard dialog content.  The default
`PageTemplate` does nothing but show the specified `WizardPage`es.
This default PageTemplate (`DefaultPageTemplate`) can be nested in
custom PageTemplates to easily reuse the logic needed to flip between
pages when adding wrapper content.

## Sequence of events

### Event: User clicks "Next >"

The Next button is a widget in the `WizardContainer`.  

When the user clicks next, the currently displayed page (the last page
on the path) is asked to update the WizardSettings.

Next, the `PageFactory` is provided with the current list of
WizardPages that the user has seen (which is empty if the wizard was
just created) and the WizardSettings map.  The PageFactory must
determine the next WizardPage based on these inputs, create or
retrieve the page, and return it to the WizardContainer.

The WizardContainer is registered with the page returned from the
PageFactory, so that the page has access to enable/disable the
navigation buttons as needed, or make other queries should the need
arise.

Next, the path is updated, adding the new page to the end of the list
of pages visited.does not 

The size of the path is now used to determine if the "Prev" button
should be enabled or disabled (if there is no previous page, it is
disabled).

The new page is then told that it is about to be displayed by calling
`page.rendering(path, getSettings())`.  This gives the page the
opportunity to adjust it's content based on the current path and
settings without imposing on the PageFactory's ability to cache pages.

Finally, the PageTemplate is given the new page, and the
WizardListeners are notified of the change.

### Event: User clicks "< Prev"



### Event: User clicks "Finish"



### Event: User clicks "Cancel"
